generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @map("user_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id") @db.ObjectId
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  phone String

  default_list Boolean? @default(false)
  premium_list Boolean? @default(false)

  subscription Subscription? @relation(fields: [subscriptionId], references: [id])

  password              String?
  password_confirmation String?
  email                 String?   @unique
  emailVerified         DateTime? @map("email_verified")
  image                 String?

  role     Role      @default(USER)
  accounts Account[]
  sessions Session[]

  subscriptionId String? @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Subscription {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  Subscription_value String

  User User[]

  @@map("subscriptions")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

enum Role {
  ADMIN
  EMPLOYEE
  USER
}

model Message {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  title   String @unique
  message String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("messages")
}
